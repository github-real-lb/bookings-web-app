{{template "base" .}}

{{define "content"}}
    {{$room := index .Data "room"}}
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <img src="/static/images/{{$room.ImageFilename}}" class="img-fluid img-thumbnail">
            </div>
        </div>

        <div class="row">
            <div class="col">
                <h1 class="text-center mt-4">{{$room.Name}}</h1>
                <p>{{$room.Description}}</p>
            </div>
        </div>

        <!-- Button trigger check-availability-modal -->
        <div class="row">
            <div class="col text-center">          
                <!-- <button type="button" class="btn btn-success" id="chk-availability">Check Availabilty</button>   -->
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#check-availability-modal">
                    Check Availabilty
                </button>         
            </div>            
        </div>        
        
        <!-- check-availability-modal -->
        <div class="modal fade" id="check-availability-modal" aria-labelledby="availability-modal-label" aria-hidden="true"  tabindex="-1">
            <div class="modal-dialog modal-lg">
                <form id="check-availability-form" class="" method="" action="" novalidate>
                    <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-3" id="availability-modal-label">Check Availability</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">                         
                            <div class="input-group" id="reservation-dates">
                                <span class="input-group-text">Arrival Date</span>
                                <input type="text" class="form-control" name="start_date" required autocomplete="off" aria-label="Arrival Date" aria-describedby="start-date" placeholder="YYYY/MM/DD">
                                <span class="input-group-text">Departure Date</span>
                                <input type="text" class="form-control" name="end_date" required autocomplete="off" aria-label="Departure Date" aria-describedby="end-date" placeholder="YYYY/MM/DD">  
                            </div>
                        </div>                            
                        <div class="form-text text-danger text-center fst-italic fw-semibold mb-3" id="reservation-dates-error"></div>
                        <div class="modal-footer"> 
                            <button type="submit" class="btn btn-success">Check Availability</button>
                        </div>
                    </div>
                </form>
            </div>
        </div> 
{{end}}

{{define "js"}} 
    <script>  
        const searchModal = new bootstrap.Modal(document.getElementById("check-availability-modal"));

        // Validates Search-Availability form and execute POST method
        document.getElementById("check-availability-form").addEventListener("submit", event => {
            event.preventDefault();
            
            let form = event.target;
            form.classList.add("was-validated");  

            if (form.checkValidity()) {                    
                let formDate = new FormData(form);

                fetch("/search-room-availability",{
                    method: "post",
                    body: formDate,})
                .then(response => response.json())
                .then(data => {
                    if (data) {
                        if (data.errors) {
                            const errors = data.errors;
                            const firstError = Object.values(errors)[0]; // Get the first error message
                            document.getElementById("reservation-dates-error").textContent = firstError;                   
                        }
                        if (data.message) {
                            document.getElementById("reservation-dates-error").textContent = data.message;                   
                        }
                    }                    
                })
                .catch(error => console.error('Error:', error));                                   
            }
        });          

        // add vanilla date range picker to form
        const elem = document.getElementById("reservation-dates");
        const rangepicker = new DateRangePicker(elem, {
            buttonClass: "btn",
            format: "yyyy-mm-dd",
            clearButton: true,
            todayButton: true,
            todayHighlight: true,
            minDate: new Date(),
        });   
    </script>   
{{end}}    