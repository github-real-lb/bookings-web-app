{{template "base" .}}

{{define "content"}}
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10 col-sm-12 col-xs-12">
                <h1 class="mt-5">Make Reservation</h1>
                <form class="" method="post" action="" novalidate>
                    <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
                    <hr>
                    <div class="input-group flex-nowrap mt-3">
                        <span class="input-group-text" id="first-name">First Name</span>
                        <input  type="text" class='form-control {{with .Form.Errors.Get "first_name"}} is-invalid {{end}}' 
                                value='{{.Form.Get "first_name"}}' name="first_name" autocomplete="on" required>                                               
                    </div> 
                    {{with .Form.Errors.Get "first_name"}}      
                    <div class="form-text text-danger text-center fst-italic fw-semibold">{{.}}</div>
                    {{end}}                     

                    <div class="input-group mt-3">
                        <span class="input-group-text" id="last-name">Last Name</span>
                        <input  type="text" class='form-control {{with .Form.Errors.Get "last_name"}} is-invalid {{end}}' 
                                value='{{.Form.Get "last_name"}}' name="last_name" autocomplete="on" required>
                    </div>
                    {{with .Form.Errors.Get "last_name"}}      
                    <div class="form-text text-danger text-center fst-italic fw-semibold">{{.}}</div>
                    {{end}}  

                    <div class="input-group mt-3">
                        <span class="input-group-text" id="email">Email Address</span>
                        <input  type="email" class='form-control {{with .Form.Errors.Get "email"}} is-invalid {{end}}' 
                                value='{{.Form.Get "email"}}' name="email" autocomplete="on" placeholder="name@example.com" required>
                    </div>
                    {{with .Form.Errors.Get "email"}}      
                    <div class="form-text text-danger text-center fst-italic fw-semibold">{{.}}</div>
                    {{end}} 

                    <div class="input-group mt-3">
                        <span class="input-group-text" id="phone">Phone Number</span>
                        <input  type="text" class='form-control {{with .Form.Errors.Get "phone"}} is-invalid {{end}}' 
                                value='{{.Form.Get "phone"}}' name="phone" autocomplete="on" required>
                    </div>
                    {{with .Form.Errors.Get "phone"}}      
                    <div class="form-text text-danger text-center fst-italic fw-semibold">{{.}}</div>
                    {{end}}   
         
                    <div class="input-group mt-3">
                        <span class="input-group-text" id="start-date">Start Date</span>
                        <input  type="text" class='form-control' name="start_date" autocomplete="on" placeholder="YYYY-MM-DD" required>
                    </div>

                    <div class="input-group mt-3">
                        <span class="input-group-text" id="end-date">End Date</span>
                        <input  type="text" class='form-control' name="end_date" autocomplete="on" placeholder="YYYY-MM-DD" required>
                    </div>
                    
                    <hr>
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="submit" class="btn btn-success">Submit</button>
                    </div>
                </form>                
            </div>        
        </div>                      
    </div>
{{end}}


{{define "js"}}
    <script>
        // Disabling form submissions if there are invalid fields
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll(".needs-validation");

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
            form.addEventListener("submit", event => {
                if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
                }

                form.classList.add("was-validated")
            }, false)
            });
        })()  
    </script>
{{end}}